cmake_minimum_required (VERSION 2.4) 
project (LpCVT)

IF(WIN32)
	find_package(CGAL QUIET REQUIRED COMPONENTS Core )
ELSE(WIN32)
	find_package(CGAL QUIET COMPONENTS Core )
ENDIF(WIN32)
	
IF(CGAL_FOUND)
	MESSAGE("CGAL found   ${CGAL_USE_FILE}")
	INCLUDE( ${CGAL_USE_FILE} )
	SET( CMAKE_VERBOSE_MAKEFILE OFF )
ELSE(CGAL_FOUND)
	IF(WIN32)
		MESSAGE("Error : CGAL not found")
	ELSE(WIN32)
		SET(CGAL_DIR /opt/CGAL-3.4 )
		SET(CGAL_LIBS_DEBUG   CGAL_Core CGAL gmp mpfr boost_thread-mt )	
		SET(CGAL_LIBS_RELEASE CGAL_Core CGAL gmp mpfr boost_thread-mt ) 
		#SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -funroll-loops")
		#SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -funroll-loops")
	ENDIF(WIN32)
ENDIF(CGAL_FOUND)

IF(WIN32)
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /DCVT_MULTITHREAD ")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /DCVT_MULTITHREAD ")
ELSE(WIN32)
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DCVT_MULTITHREAD ")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DCVT_MULTITHREAD ")
ENDIF(WIN32)



AUX_SOURCE_DIRECTORY(. SUB_SOURCES)
AUX_SOURCE_DIRECTORY(./algebra SOURCES)
AUX_SOURCE_DIRECTORY(./common SOURCES)
AUX_SOURCE_DIRECTORY(./combinatorics SOURCES)
AUX_SOURCE_DIRECTORY(./combinatorics/exact SOURCES)
SET(SOURCES ${SOURCES} ${SUB_SOURCES})
INCLUDE_DIRECTORIES(..)
ADD_EXECUTABLE(LpCVT ${SOURCES})

